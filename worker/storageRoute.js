const _0x5b4976 = _0x4622;
(function(_0x1cc075, _0x2183da) {
	const _0xfa0662 = _0x4622
		, _0x4495df = _0x1cc075();
	while (!![]) {
		try {
			const _0x5583b5 = -parseInt(_0xfa0662(0xa4)) / 0x1 + parseInt(_0xfa0662(0xb8)) / 0x2 + -parseInt(_0xfa0662(0xa3)) / 0x3 * (parseInt(_0xfa0662(0xa8)) / 0x4) + parseInt(_0xfa0662(0xaf)) / 0x5 + parseInt(_0xfa0662(0xac)) / 0x6 * (-parseInt(_0xfa0662(0xa7)) / 0x7) + -parseInt(_0xfa0662(0xa9)) / 0x8 + parseInt(_0xfa0662(0xa6)) / 0x9;
			if (_0x5583b5 === _0x2183da) break;
			else _0x4495df['push'](_0x4495df['shift']());
		} catch (_0x3226e0) {
			_0x4495df['push'](_0x4495df['shift']());
		}
	}
}(_0x4d22, 0x2d37a));
const express = require(_0x5b4976(0xb0))
	, router = express['Router']()
	, path = require('path')
	, fs = require('fs');

function getDirectorySize(_0x3a8110, _0x26e570) {
	const _0xc9590c = _0x5b4976;
	let _0x4a09ec = 0x0;
	fs[_0xc9590c(0xae)](_0x3a8110, (_0x5c4109, _0x17fd40) => {
		if (_0x5c4109) return _0x26e570(_0x5c4109);
		let _0x6efebf = _0x17fd40['length'];
		if (_0x6efebf === 0x0) return _0x26e570(null, _0x4a09ec);
		_0x17fd40['forEach'](_0x470fd6 => {
			const _0x18db8d = _0x4622
				, _0xe4d872 = path[_0x18db8d(0xb9)](_0x3a8110, _0x470fd6);
			fs[_0x18db8d(0xaa)](_0xe4d872, (_0x5b8221, _0x3bbc7c) => {
				const _0x343b2a = _0x18db8d;
				if (_0x5b8221) {
					if (_0x5b8221[_0x343b2a(0xb6)] === 'ENOENT') {
						--_0x6efebf === 0x0 && _0x26e570(null, _0x4a09ec);
						return;
					} else return _0x26e570(_0x5b8221);
				}
				if (_0x3bbc7c[_0x343b2a(0xad)]()) _0x4a09ec += _0x3bbc7c[_0x343b2a(0xb2)];
				else _0x3bbc7c[_0x343b2a(0xb1)]() && getDirectorySize(_0xe4d872, (_0x53e0d1, _0xa8f483) => {
					if (_0x53e0d1) return _0x26e570(_0x53e0d1);
					_0x4a09ec += _0xa8f483, --_0x6efebf === 0x0 && _0x26e570(null, _0x4a09ec);
				});
				--_0x6efebf === 0x0 && _0x26e570(null, _0x4a09ec);
			});
		});
	});
}

function _0x4622(_0x19f463, _0x393d7b) {
	const _0x4d22e5 = _0x4d22();
	return _0x4622 = function(_0x462211, _0x5a99ee) {
		_0x462211 = _0x462211 - 0xa3;
		let _0x243873 = _0x4d22e5[_0x462211];
		return _0x243873;
	}, _0x4622(_0x19f463, _0x393d7b);
}

function _0x4d22() {
	const _0x20343b = ['3ynxGuo', '252601tJrjaj', 'json', '9409968WMSfnE', '2035705LcQZXO', '1433252KxUZFx', '2416104mvzaVJ', 'stat', 'exports', '6EyTYZL', 'isFile', 'readdir', '89075CtDCtp', 'express', 'isDirectory', 'size', 'error', '../webapppublic', 'Error\x20calculating\x20directory\x20size:', 'code', 'status', '651170oJOvLR', 'join'];
	_0x4d22 = function() {
		return _0x20343b;
	};
	return _0x4d22();
}
router['get']('/', (_0x2c6921, _0x2fcff8) => {
	const _0x91c4f5 = _0x5b4976
		, _0x28d9d0 = path[_0x91c4f5(0xb9)](__dirname, _0x91c4f5(0xb4));
	getDirectorySize(_0x28d9d0, (_0x517b97, _0x1a7a90) => {
		const _0x2c6b63 = _0x91c4f5;
		if (_0x517b97) return console[_0x2c6b63(0xb3)](_0x2c6b63(0xb5), _0x517b97), _0x2fcff8[_0x2c6b63(0xb7)](0x1f4)[_0x2c6b63(0xa5)]({
			'error': 'Error\x20calculating\x20directory\x20size'
		});
		const _0x2a9ca0 = _0x1a7a90 / (0x400 * 0x400);
		_0x2fcff8[_0x2c6b63(0xa5)]({
			'size': _0x2a9ca0
		});
	});
}), module[_0x5b4976(0xab)] = router;

   